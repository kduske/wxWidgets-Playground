====== Windows ======
- For Visual Studio (only tested with 2010)
  - Get the binary build of wxWidgets 3 for your platform from
    http://www.wxwidgets.org

    - For 32bit builds, you need the following files:
      If you are using a different version of Visual Studio, you will have to download other binaries, e.g., wxMSW-<version>-vc120_Dev.7z etc.
      - wxWidgets-<version>_headers.7z
      - wxMSW-<version>_vc100_Dev.7z
      - wxMSW-<version>_vc100_ReleaseDLL.7z
      - wxMSW-<version>_vc100_ReleasePDB.7z
      
    - Unpack all files into c:\wxWidgets-<version> so that "include" and "lib" directories are at the same level after unpacking.
    - In this directory, rename lib/vc100_dll to lib/vc_dll
    - The directory layout should look like this:
      wxWidgets-3.0.0
        \include
          \msvc
            \wx
          \wx
            <wxwidgets header files>
        \lib
          \vc_dll
            <wxwidgets libraries>

    - Set a new environment variable WXWIN=C:\wxWidgets-<version> (replace the path with the path where you unpacked wxWidgets).
    - If you want to run the binaries without using the installer, add %WXWIN%\lib\vc_dll to your path. The relevant parts of my PATH variable look something like this:
    C:\Program Files (x86)\CMake 2.8\bin;c:\wxWidgets-3.0.0\lib\vc_dll;
  - Download and install CMake for Windows (www.cmake.org)
  - Open a command prompt and change into the directory where you unpacked the TrenchBroom sources.
  - Create a new directory, e.g. "build", and change into it.
  - Run the following two commands
    cmake .. -DCMAKE_BUILD_TYPE=Release
    cmake --build . --config Release
    You can replace "Release" with "Debug" if you want to create a debug build. This is also recommended if you want to work on the source in Visual Studio.
- For MinGW 64
  - Download and install MinGW from http://mingw-w64.sourceforge.net/
    - Scroll down to Mingw-builds and select the appropriate version for your OS (32 or 64 Bit), then select the SJLJ variant.
    - Add <MinGW installation dir>/bin to your path.
  - Download wxWidgets source (for DOS / Windows) from http://www.wxwidgets.org/
    - Unpack the sources somewhere to C:\wxWidgets-3.0.0
  - Build wxWidgets
    - Open a command prompt and cd into C:\wxWidgets-3.0.0\build\msw
    - Run these commands
      mingw32-make -f makefile.gcc SHARED=1 UNICODE=1 OPENGL=1 BUILD=release clean
      mingw32-make -f makefile.gcc SHARED=1 UNICODE=1 OPENGL=1 BUILD=release
      mingw32-make -f makefile.gcc SHARED=1 UNICODE=1 OPENGL=1 BUILD=debug clean
      mingw32-make -f makefile.gcc SHARED=1 UNICODE=1 OPENGL=1 BUILD=debug
  - Set a new environment variable WXWIN=C:\wxWidgets-<version> (replace the path with the path where you unpacked wxWidgets).
  - If you want to run the binaries without using the installer, add %WXWIN%\lib\gc_dll to your path. The relevant parts of my PATH variable look something like this:
    C:\Program Files (x86)\CMake 2.8\bin;c:\wxWidgets-3.0.0\lib\gcc_dll;


====== Linux ======
Dependencies
Compiling wxWidgets 3 requires the following dependencies. You should install them using the packager of your Linux distribution.
- g++ GNU c++ compiler
- GTK2 and development packages: libgtk2.0-dev (GTK3 will NOT work)
- FreeImage: libfreeimage-dev
- OpenGL and GLU development headers (Mesa OpenGL development packages)
  freeglut3, freeglut3-dev, mesa-common-dev
- X11 video mode extension library: libxxf86vm-dev
- If you have a debian-based distribution, install them with this command:
  sudo apt-get install libgtk2.0-dev freeglut3 freeglut3-dev libglew-dev mesa-common-dev build-essential libglm-dev libxxf86vm-dev libfreeimage-dev
Compiling and linking TrenchBroom requires a working OpenGL installation. This page may help you if you see linker errors about missing GL libraries:
http://www.wikihow.com/Install-Mesa-%28OpenGL%29-on-Linux-Mint
- Some more detailed (possibly outdated) information about building TrenchBroom on Linux: http://andyp123.blogspot.de/2013/03/running-trenchbroom-quake-editor-on.html

wxWidgets
- Get the latest sources of wxWidgets 3 from wxwidgets.org and unpack them.
- Move the unpacked directory someplace where you want to keep it.
- Open a terminal and change into the wxwidgets directory.
- Create two directories: build-release and build-debug (don't rename those!)
- Change into wxwidgets/build-release
- Run 
  ../configure --disable-shared --with-opengl --with-gtk=2
- Run make
- Run sudo make install
- Change into wxwidgets/build-debug
- Run 
  ../configure --enable-debug --with-opengl --with-gtk=2
- Run make
- Run sudo make install

CMake
- Install CMake using your package manager: sudo apt-get install cmake

- Open a terminal and change into the directory where you unpacked the TrenchBroom sources
- Create a new directory, e.g. "build", and change into it.
- Run the following two commands
  cmake .. -DCMAKE_BUILD_TYPE=Release
  cmake --build .
  You can replace "Release" with "Debug" if you want to create a debug build.


====== Mac OS X ======
Build environment
1. Get Xcode from the App Store

2. Mac OS X SDKs
- Get the Mac OS X 10.6 SDK (from an older Xcode version such as Xcode 3)
- Copy it to /Developer/SDKs (or some other folder of your choosing)
- Create a symbolic link inside /Applications/XCode.app:
  - If you copied the 10.6 SDK to /Developer/SDKs:
  - sudo ln -s /Developer/SDKs/MacOSX10.6.sdk/ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.6.sdk
  - You may have to repeat this step whenever Xcode is updated.

3. Dependencies
- Install FreeImage. The easiest way is to use macports (macports.org)
  sudo port install freeimage +universal

3. wxWidgets
- Get the latest sources of wxWidgets 3 from wxwidgets.org and unpack them.
- Move the unpacked directory someplace where you want to keep it.
- Open a terminal and change into the wxwidgets directory.
- Apply the patches in TrenchBroom/patches/wxWidgets
- Create two directories: build-release and build-debug (don't rename those!)
- Change into wxwidgets/build-release
- Run 
  - If you copied the 10.6 SDK to /Developer/SDKs
  ../configure --with-osx_cocoa --disable-shared --with-opengl --enable-universal-binary=i386,x86_64 --with-macosx-sdk=/Developer/SDKs/MacOSX10.6.sdk --with-macosx-version-min=10.6
- Run make, then sudo make install
- Change into wxwidgets/build-debug
- Run 
  - If you copied the 10.6 SDK to /Developer/SDKs
  ../configure --enable-debug --with-osx_cocoa --with-opengl --enable-universal-binary=i386,x86_64 --with-macosx-sdk=/Developer/SDKs/MacOSX10.6.sdk --with-macosx-version-min=10.6
- Run make, then sudo make install
